{
    "error": [
        {
            "severity": "error",
            "line_from": 155,
            "line_to": 155,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getPersistentPaymentMethodKeys is incorrect, got 'list<mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "     * @return string[]",
            "selected_text": "string[]",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 165,
            "line_to": 165,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'list<mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getPersistentPaymentMethodKeys",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        return $persistentMethodNames;",
            "selected_text": "$persistentMethodNames",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 62,
            "line_to": 62,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodValidator::getQuotePaymentMethodsKeys is incorrect, got 'list<mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "     * @return string[]",
            "selected_text": "string[]",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 75,
            "line_to": 75,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'list<mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodValidator::getQuotePaymentMethodsKeys",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "        return $paymentMethodsKeys;",
            "selected_text": "$paymentMethodsKeys",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 81,
            "line_to": 81,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodValidator::getPaymentSelections is incorrect, got 'list<mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "     * @return string[]",
            "selected_text": "string[]",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 92,
            "line_to": 92,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'list<mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodValidator::getPaymentSelections",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "        return $paymentSelections;",
            "selected_text": "$paymentSelections",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 50,
            "line_to": 62,
            "type": "UndefinedDocblockClass",
            "message": "Docblock-defined class or interface Orm\\Zed\\ProductMerchantConnector\\Persistence\\SpyProductAbstractMerchantQuery does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "        $paymentProviderEntities = $this->getFactory()\n            ->createPaymentProviderQuery()\n            ->joinWithSpyPaymentMethod()\n            ->useSpyPaymentMethodQuery()\n                ->joinWithSpyPaymentMethodStore()\n                ->filterByIsActive(true)\n                ->useSpyPaymentMethodStoreQuery()\n                    ->joinWithSpyStore()\n                    ->useSpyStoreQuery()\n                        ->filterByName($storeName)\n                    ->endUse()\n                ->endUse()\n            ->endUse()",
            "selected_text": "$this->getFactory()\n            ->createPaymentProviderQuery()\n            ->joinWithSpyPaymentMethod()\n            ->useSpyPaymentMethodQuery()\n                ->joinWithSpyPaymentMethodStore()\n                ->filterByIsActive(true)\n                ->useSpyPaymentMethodStoreQuery()\n                    ->joinWithSpyStore()\n                    ->useSpyStoreQuery()\n                        ->filterByName($storeName)\n                    ->endUse()\n                ->endUse()\n            ->endUse()",
            "error_level": -1,
            "shortcode": 200
        }
    ],
    "warning": [
        {
            "severity": "info",
            "line_from": 38,
            "line_to": 38,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::client does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Client/Payment/PaymentDependencyProvider.php",
            "snippet": "            return new PaymentToZedRequestClientBridge($container->getLocator()->zedRequest()->client());",
            "selected_text": "client",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 25,
            "line_to": 25,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::definePriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "            $calculableObjectTransfer->getTotals()",
            "selected_text": "$calculableObjectTransfer->getTotals()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 29,
            "line_to": 29,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::applyLimitedAmountPayments cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "            $calculableObjectTransfer->getTotals(),",
            "selected_text": "$calculableObjectTransfer->getTotals()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 34,
            "line_to": 34,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::applyUnlimitedAmountPayments cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "            $calculableObjectTransfer->getTotals(),",
            "selected_text": "$calculableObjectTransfer->getTotals()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 99,
            "line_to": 99,
            "type": "PossiblyNullOperand",
            "message": "Left operand cannot be nullable, got int|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "                $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$priceToPay",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 99,
            "line_to": 99,
            "type": "PossiblyNullOperand",
            "message": "Right operand cannot be nullable, got int|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "                $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$paymentTransfer->getAvailableAmount()",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 113,
            "line_to": 113,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPaymentProvider on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $paymentProvider = $quoteTransfer->getPayment()->getPaymentProvider();",
            "selected_text": "getPaymentProvider",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 115,
            "line_to": 115,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        if ($this->hasPlugin($pluginType, $paymentProvider) && !$this->isAlreadyExecuted($pluginType, $paymentProvider)) {",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 115,
            "line_to": 115,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::isAlreadyExecuted cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        if ($this->hasPlugin($pluginType, $paymentProvider) && !$this->isAlreadyExecuted($pluginType, $paymentProvider)) {",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 116,
            "line_to": 116,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentProvider);",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 137,
            "line_to": 137,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            if (!$this->hasPlugin($pluginType, $paymentTransfer->getPaymentProvider()) || $this->isAlreadyExecuted($pluginType, $paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 137,
            "line_to": 137,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::isAlreadyExecuted cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            if (!$this->hasPlugin($pluginType, $paymentTransfer->getPaymentProvider()) || $this->isAlreadyExecuted($pluginType, $paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 140,
            "line_to": 140,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentTransfer->getPaymentProvider());",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 142,
            "line_to": 142,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $this->executedProviderPlugins[$pluginType][mixed|null|string] using possibly null offset mixed|null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $this->executedProviderPlugins[$pluginType][$paymentTransfer->getPaymentProvider()] = true;",
            "selected_text": "$this->executedProviderPlugins[$pluginType]",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 160,
            "line_to": 160,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPaymentProvider on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $paymentProvider = $quoteTransfer->getPayment()->getPaymentProvider();",
            "selected_text": "getPaymentProvider",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 162,
            "line_to": 162,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        if ($this->hasPlugin($pluginType, $paymentProvider)) {",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 164,
            "line_to": 164,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentProvider);",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 168,
            "line_to": 168,
            "type": "RedundantCondition",
            "message": "Found a redundant condition when evaluating $isPassed and trying to reconcile type 'true' to !falsy",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        return $isPassed && $this->executePreCheckPluginsForPayments($quoteTransfer, $checkoutResponseTransfer);",
            "selected_text": "$isPassed && $this->executePreCheckPluginsForPayments($quoteTransfer, $checkoutResponseTransfer)",
            "error_level": 4,
            "shortcode": 122
        },
        {
            "severity": "info",
            "line_from": 185,
            "line_to": 185,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            if (!$this->hasPlugin($pluginType, $paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 190,
            "line_to": 190,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentTransfer->getPaymentProvider());",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 211,
            "line_to": 211,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\CheckoutErrorTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $errorCount = $checkoutResponseTransfer->getErrors()->count();",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 214,
            "line_to": 214,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\CheckoutErrorTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        return $errorCount === $checkoutResponseTransfer->getErrors()->count();",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 181,
            "line_to": 181,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdStores on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        return $paymentMethodTransfer->getIsActive() && in_array($idStore, $storeRelationTransfer->getIdStores());",
            "selected_text": "getIdStores",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 215,
            "line_to": 215,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'int' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getIdStoreFromQuote is not nullable, but 'int|null' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "     * @return int",
            "selected_text": "int",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 222,
            "line_to": 222,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdStore on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        if ($storeTransfer->getIdStore() === null) {",
            "selected_text": "getIdStore",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 224,
            "line_to": 224,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Dependency\\Facade\\PaymentToStoreFacadeInterface::getStoreByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "            $storeTransfer = $this->storeFacade->getStoreByName($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 227,
            "line_to": 227,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'int' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getIdStoreFromQuote is not nullable, but the function returns 'int|null'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        return $storeTransfer->getIdStore();",
            "selected_text": "$storeTransfer->getIdStore()",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 62,
            "line_to": 62,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodStoreRelationUpdater::getIdStoresByIdShipmentMethod cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        $currentIdStores = $this->getIdStoresByIdShipmentMethod($storeRelationTransfer->getIdEntity());",
            "selected_text": "$storeRelationTransfer->getIdEntity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentEntityManagerInterface::addPaymentMethodStoreRelationsForStores cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        $this->paymentEntityManager->addPaymentMethodStoreRelationsForStores($saveIdStores, $storeRelationTransfer->getIdEntity());",
            "selected_text": "$storeRelationTransfer->getIdEntity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 69,
            "line_to": 69,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentEntityManagerInterface::removePaymentMethodStoreRelationsForStores cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        $this->paymentEntityManager->removePaymentMethodStoreRelationsForStores($deleteIdStores, $storeRelationTransfer->getIdEntity());",
            "selected_text": "$storeRelationTransfer->getIdEntity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 69,
            "line_to": 69,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setIdEntity on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodUpdater.php",
            "snippet": "            ->setIdEntity($paymentMethodTransfer->getIdPaymentMethod());",
            "selected_text": "setIdEntity",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 72,
            "line_to": 72,
            "type": "MismatchingDocblockParamType",
            "message": "Parameter $objectCollection has wrong type 'Propel\\Runtime\\Collection\\ObjectCollection|array<array-key, Orm\\Zed\\Payment\\Persistence\\SpySalesPayment>', should be 'Propel\\Runtime\\Collection\\ObjectCollection'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "     * @param \\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpySalesPayment[] $objectCollection",
            "selected_text": "\\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpySalesPayment[]",
            "error_level": 4,
            "shortcode": 141
        },
        {
            "severity": "info",
            "line_from": 85,
            "line_to": 85,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setPriceToPay on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "        $orderTransfer->getTotals()->setPriceToPay($this->calculatePriceToPay($orderTransfer));",
            "selected_text": "setPriceToPay",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 97,
            "line_to": 97,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getGrandTotal on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "        $priceToPay = $orderTransfer->getTotals()->getGrandTotal();",
            "selected_text": "getGrandTotal",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 108,
            "line_to": 108,
            "type": "PossiblyNullOperand",
            "message": "Left operand cannot be nullable, got int|mixed|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$priceToPay",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 108,
            "line_to": 108,
            "type": "PossiblyNullOperand",
            "message": "Right operand cannot be nullable, got int|mixed|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$paymentTransfer->getAvailableAmount()",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 122,
            "line_to": 122,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Dependency\\Plugin\\Sales\\PaymentHydratorPluginCollectionInterface::has cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "        if ($this->paymentHydratePluginCollection->has($paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 123,
            "line_to": 123,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Dependency\\Plugin\\Sales\\PaymentHydratorPluginCollectionInterface::get cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            $paymentHydratePlugin = $this->paymentHydratePluginCollection->get($paymentTransfer->getPaymentProvider());",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 139,
            "line_to": 139,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodsByIdSalesOrder cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            ->queryPaymentMethodsByIdSalesOrder($orderTransfer->getIdSalesOrder())",
            "selected_text": "$orderTransfer->getIdSalesOrder()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 36,
            "line_to": 36,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodPriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "            $paymentTransfer->getFkSalesOrder(),",
            "selected_text": "$paymentTransfer->getFkSalesOrder()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 37,
            "line_to": 37,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodPriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "            $paymentTransfer->getPaymentProvider(),",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 38,
            "line_to": 38,
            "type": "PossiblyNullArgument",
            "message": "Argument 3 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodPriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "            $paymentTransfer->getPaymentMethod()",
            "selected_text": "$paymentTransfer->getPaymentMethod()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 41,
            "line_to": 41,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getAmount on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "        return $salesPaymentEntity->getAmount();",
            "selected_text": "getAmount",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 45,
            "line_to": 45,
            "type": "PossiblyNullReference",
            "message": "Cannot call method requireIdSalesOrder on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "            ->requireIdSalesOrder();",
            "selected_text": "requireIdSalesOrder",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 47,
            "line_to": 47,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdSalesOrder on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $idSalesOrder = $checkoutResponse->getSaveOrder()->getIdSalesOrder();",
            "selected_text": "getIdSalesOrder",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 49,
            "line_to": 49,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Order\\SalesPaymentSaver::executeSavePaymentMethodsTransaction cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "            $this->executeSavePaymentMethodsTransaction($quoteTransfer, $idSalesOrder);",
            "selected_text": "$idSalesOrder",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 101,
            "line_to": 101,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Payment\\Persistence\\SpySalesPayment::setAmount cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $salesPaymentEntity->setAmount($paymentTransfer->getAmount());",
            "selected_text": "$paymentTransfer->getAmount()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 107,
            "line_to": 107,
            "type": "MismatchingDocblockParamType",
            "message": "Parameter $paymentCollection has wrong type 'ArrayObject|array<array-key, Generated\\Shared\\Transfer\\PaymentTransfer>', should be 'ArrayObject'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "     * @param \\Generated\\Shared\\Transfer\\PaymentTransfer[]|\\ArrayObject $paymentCollection",
            "selected_text": "\\Generated\\Shared\\Transfer\\PaymentTransfer[]|\\ArrayObject",
            "error_level": 4,
            "shortcode": 141
        },
        {
            "severity": "info",
            "line_from": 130,
            "line_to": 130,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodType cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "                $paymentTransfer->getPaymentProvider(),",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 131,
            "line_to": 131,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodType cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "                $paymentTransfer->getPaymentMethod()",
            "selected_text": "$paymentTransfer->getPaymentMethod()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 55,
            "line_to": 55,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Spryker\\Shared\\Kernel\\BundleProxy::facade does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/PaymentDependencyProvider.php",
            "snippet": "                $container->getLocator()->store()->facade()",
            "selected_text": "facade",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 63,
            "line_to": 63,
            "type": "UndefinedMagicMethod",
            "message": "Magic method Orm\\Zed\\Availability\\Persistence\\SpyAvailabilityAbstractQuery::groupbyidpaymentprovider does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "            ->groupByIdPaymentProvider()",
            "selected_text": "groupByIdPaymentProvider",
            "error_level": 4,
            "shortcode": 219
        },
        {
            "severity": "info",
            "line_from": 66,
            "line_to": 66,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider> variable $paymentProviderEntities",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "        if (!$paymentProviderEntities->getData()) {",
            "selected_text": "getData",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 109,
            "line_to": 109,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod> variable $paymentMethodEntities",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "        if (!$paymentMethodEntities->getData()) {",
            "selected_text": "getData",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 42,
            "line_to": 42,
            "type": "MismatchingDocblockParamType",
            "message": "Parameter $paymentMethodEntityCollection has wrong type 'Propel\\Runtime\\Collection\\ObjectCollection|array<array-key, Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod>', should be 'Propel\\Runtime\\Collection\\ObjectCollection'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentMapper.php",
            "snippet": "     * @param \\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod[] $paymentMethodEntityCollection",
            "selected_text": "\\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod[]",
            "error_level": 4,
            "shortcode": 141
        },
        {
            "severity": "info",
            "line_from": 104,
            "line_to": 104,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod::setPaymentMethodKey cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentMapper.php",
            "snippet": "        $paymentMethodEntity->setPaymentMethodKey($paymentMethodTransfer->getMethodName());",
            "selected_text": "$paymentMethodTransfer->getMethodName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 32,
            "line_to": 32,
            "type": "MismatchingDocblockParamType",
            "message": "Parameter $paymentProviderEntityCollection has wrong type 'Propel\\Runtime\\Collection\\ObjectCollection|array<array-key, Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider>', should be 'Propel\\Runtime\\Collection\\ObjectCollection'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentProviderMapper.php",
            "snippet": "     * @param \\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider[] $paymentProviderEntityCollection",
            "selected_text": "\\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider[]",
            "error_level": 4,
            "shortcode": 141
        },
        {
            "severity": "info",
            "line_from": 18,
            "line_to": 18,
            "type": "MismatchingDocblockParamType",
            "message": "Parameter $paymentMethodStoreEntities has wrong type 'Propel\\Runtime\\Collection\\ObjectCollection|array<array-key, Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStore>', should be 'Propel\\Runtime\\Collection\\ObjectCollection'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/StoreRelationMapper.php",
            "snippet": "     * @param \\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStore[] $paymentMethodStoreEntities",
            "selected_text": "\\Propel\\Runtime\\Collection\\ObjectCollection|\\Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStore[]",
            "error_level": 4,
            "shortcode": 141
        }
    ],
    "deprecation": [
        {
            "severity": "info",
            "line_from": 22,
            "line_to": 22,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::getPaymentCollection has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "        $paymentCollection = $this->getPaymentCollection($calculableObjectTransfer);",
            "selected_text": "getPaymentCollection",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 63,
            "line_to": 63,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::executePreCheckPluginsForPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        return $this->executePreCheckPluginsForPayment(",
            "selected_text": "executePreCheckPluginsForPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 113,
            "line_to": 113,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $paymentProvider = $quoteTransfer->getPayment()->getPaymentProvider();",
            "selected_text": "getPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 160,
            "line_to": 160,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $paymentProvider = $quoteTransfer->getPayment()->getPaymentProvider();",
            "selected_text": "getPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 165,
            "line_to": 165,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::executePreCheckPluginPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $isPassed &= $this->executePreCheckPluginPayment($quoteTransfer, $checkoutResponseTransfer, $plugin);",
            "selected_text": "executePreCheckPluginPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 191,
            "line_to": 191,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::executePreCheckPluginPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $isPassed &= $this->executePreCheckPluginPayment($quoteTransfer, $checkoutResponseTransfer, $plugin);",
            "selected_text": "executePreCheckPluginPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 67,
            "line_to": 67,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "        if ($quoteTransfer->getPayment()) {",
            "selected_text": "getPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "            $paymentMethodsKeys[] = $quoteTransfer->getPayment()->getPaymentSelection();",
            "selected_text": "getPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 20,
            "line_to": 20,
            "type": "DeprecatedTrait",
            "message": "Trait Spryker\\Zed\\PropelOrm\\Business\\Transaction\\DatabaseTransactionHandlerTrait is deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "    use DatabaseTransactionHandlerTrait;",
            "selected_text": "DatabaseTransactionHandlerTrait",
            "error_level": 2,
            "shortcode": 171
        },
        {
            "severity": "info",
            "line_from": 43,
            "line_to": 43,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\CheckoutResponseTransfer::requireSaveOrder has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $checkoutResponse->requireSaveOrder()",
            "selected_text": "requireSaveOrder",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 44,
            "line_to": 44,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\CheckoutResponseTransfer::getSaveOrder has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "            ->getSaveOrder()",
            "selected_text": "getSaveOrder",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 47,
            "line_to": 47,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\CheckoutResponseTransfer::getSaveOrder has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $idSalesOrder = $checkoutResponse->getSaveOrder()->getIdSalesOrder();",
            "selected_text": "getSaveOrder",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 61,
            "line_to": 61,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\Business\\Order\\SalesPaymentSaver::getPaymentCollection has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $paymentCollection = $this->getPaymentCollection($quoteTransfer);",
            "selected_text": "getPaymentCollection",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 79,
            "line_to": 79,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $singlePayment = $quoteTransfer->getPayment();",
            "selected_text": "getPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 19,
            "line_to": 19,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Calculation\\Dependency\\Plugin\\CalculationPluginInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Calculation/PaymentCalculatorPlugin.php",
            "snippet": "class PaymentCalculatorPlugin extends AbstractPlugin implements CalculationPluginInterface",
            "selected_text": "PaymentCalculatorPlugin",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 32,
            "line_to": 32,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\CheckoutResponseTransfer::setSaveOrder has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Checkout/AbstractPaymentOrderPlugin.php",
            "snippet": "        $checkoutResponseTransfer->setSaveOrder($saveOrderTransfer);",
            "selected_text": "setSaveOrder",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 19,
            "line_to": 19,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Checkout\\Dependency\\Plugin\\CheckoutDoSaveOrderInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Checkout/PaymentOrderSaverPlugin.php",
            "snippet": "class PaymentOrderSaverPlugin extends AbstractPaymentOrderPlugin implements CheckoutDoSaveOrderInterface",
            "selected_text": "PaymentOrderSaverPlugin",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 20,
            "line_to": 20,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Checkout\\Dependency\\Plugin\\CheckoutPreConditionInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Checkout/PaymentPreCheckPlugin.php",
            "snippet": "class PaymentPreCheckPlugin extends AbstractPlugin implements CheckoutPreConditionInterface",
            "selected_text": "PaymentPreCheckPlugin",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 22,
            "line_to": 22,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Checkout\\Dependency\\Plugin\\CheckoutSaveOrderInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Checkout/PaymentSaverPlugin.php",
            "snippet": "class PaymentSaverPlugin extends AbstractPlugin implements CheckoutSaveOrderInterface",
            "selected_text": "PaymentSaverPlugin",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 19,
            "line_to": 19,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Sales\\Dependency\\Plugin\\HydrateOrderPluginInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Sales/PaymentOrderHydratePlugin.php",
            "snippet": "class PaymentOrderHydratePlugin extends AbstractPlugin implements HydrateOrderPluginInterface",
            "selected_text": "PaymentOrderHydratePlugin",
            "error_level": 2,
            "shortcode": 152
        }
    ]
}