{
    "error": [
        {
            "severity": "error",
            "line_from": 31,
            "line_to": 31,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, mixed>|null' for Spryker\\Client\\Payment\\Dependency\\Service\\PaymentToUtilEncodingServiceBridge::decodeJson is incorrect, got 'array<array-key, mixed>|null|object'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Client/Payment/Dependency/Service/PaymentToUtilEncodingServiceBridge.php",
            "snippet": "     * @return array|null",
            "selected_text": "array|null",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 42,
            "line_to": 42,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'array<array-key, mixed>|null|object' does not match the declared return type 'array<array-key, mixed>|null' for Spryker\\Client\\Payment\\Dependency\\Service\\PaymentToUtilEncodingServiceBridge::decodeJson",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Client/Payment/Dependency/Service/PaymentToUtilEncodingServiceBridge.php",
            "snippet": "        return $this->utilEncodingService->decodeJson($jsonValue, $assoc, $depth, $options);",
            "selected_text": "$this->utilEncodingService->decodeJson($jsonValue, $assoc, $depth, $options)",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 42,
            "line_to": 42,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Yves\\Payment\\Plugin\\PaymentFormFilterPlugin::collectPaymentMethodNames is incorrect, got 'list<mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Yves/Payment/Plugin/PaymentFormFilterPlugin.php",
            "snippet": "     * @return array<string>",
            "selected_text": "array<string>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 52,
            "line_to": 52,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'list<mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Yves\\Payment\\Plugin\\PaymentFormFilterPlugin::collectPaymentMethodNames",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Yves/Payment/Plugin/PaymentFormFilterPlugin.php",
            "snippet": "        return $paymentMethodNames;",
            "selected_text": "$paymentMethodNames",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 48,
            "line_to": 48,
            "type": "UndefinedMethod",
            "message": "Method Spryker\\Shared\\Kernel\\Transfer\\AbstractTransfer::toArrayNotRecursiveCamelCased does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Mapper/QuoteDataMapper.php",
            "snippet": "        $camelCasedData = $transfer->toArrayNotRecursiveCamelCased();",
            "selected_text": "toArrayNotRecursiveCamelCased",
            "error_level": 6,
            "shortcode": 22
        },
        {
            "severity": "error",
            "line_from": 158,
            "line_to": 158,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getPersistentPaymentMethodKeys is incorrect, got 'list<mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "     * @return array<string>",
            "selected_text": "array<string>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 168,
            "line_to": 168,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'list<mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getPersistentPaymentMethodKeys",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        return $persistentMethodNames;",
            "selected_text": "$persistentMethodNames",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 94,
            "line_to": 94,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodValidator::getPaymentSelections is incorrect, got 'list<mixed|null|string>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "     * @return array<string>",
            "selected_text": "array<string>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 105,
            "line_to": 105,
            "type": "InvalidReturnStatement",
            "message": "The inferred type 'list<mixed|null|string>' does not match the declared return type 'array<array-key, string>' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodValidator::getPaymentSelections",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "        return $paymentSelections;",
            "selected_text": "$paymentSelections",
            "error_level": 6,
            "shortcode": 128
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentCancelReservationFailedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentCancelReservationFailedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentCancelReservationFailedMessageHandlerPlugin&static, \"onPaymentCancelReservationFailed\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentCancelReservationFailedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentConfirmationFailedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentConfirmationFailedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentConfirmationFailedMessageHandlerPlugin&static, \"onPaymentConfirmationFailed\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentConfirmationFailedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentConfirmedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentConfirmedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentConfirmedMessageHandlerPlugin&static, \"onPaymentConfirmed\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentConfirmedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentMethodAddedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentMethodAddedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentMethodAddedMessageHandlerPlugin&static, \"onPaymentMethodAdded\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentMethodAddedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentMethodDeletedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentMethodDeletedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentMethodDeletedMessageHandlerPlugin&static, \"onPaymentMethodDeleted\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentMethodDeletedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentPreauthorizationFailedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentPreauthorizationFailedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentPreauthorizationFailedMessageHandlerPlugin&static, \"onPaymentPreauthorizationFailed\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentPreauthorizationFailedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentPreauthorizedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentPreauthorizedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentPreauthorizedMessageHandlerPlugin&static, \"onPaymentPreauthorized\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentPreauthorizedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentRefundFailedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentRefundFailedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentRefundFailedMessageHandlerPlugin&static, \"onPaymentRefundFailed\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentRefundFailedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentRefundedMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentRefundedTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentRefundedMessageHandlerPlugin&static, \"onPaymentRefunded\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentRefundedMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        },
        {
            "severity": "error",
            "line_from": 43,
            "line_to": 43,
            "type": "InvalidReturnType",
            "message": "The declared return type 'array<string, callable>' for Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentReservationCanceledMessageHandlerPlugin::handles is incorrect, got 'Generator<Generated\\Shared\\Transfer\\PaymentReservationCanceledTransfer::class, array{Spryker\\Zed\\Payment\\Communication\\Plugin\\MessageBroker\\PaymentReservationCanceledMessageHandlerPlugin&static, \"onPaymentReservationCanceled\"}, mixed, void>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/MessageBroker/PaymentReservationCanceledMessageHandlerPlugin.php",
            "snippet": "     * @return array<string, callable>",
            "selected_text": "array<string, callable>",
            "error_level": 6,
            "shortcode": 11
        }
    ],
    "warning": [
        {
            "severity": "info",
            "line_from": 79,
            "line_to": 79,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Generated\\Shared\\Transfer\\PaymentAuthorizeResponseTransfer::fromArray cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Client/Payment/Executor/PaymentRequestExecutor.php",
            "snippet": "        return (new PaymentAuthorizeResponseTransfer())->fromArray($responseData, true);",
            "selected_text": "$responseData",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 25,
            "line_to": 25,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of preg_match cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Service/Payment/Extractor/PaymentMethodKeyExtractor.php",
            "snippet": "        preg_match('/^([\\w]+)/', $paymentTransfer->getPaymentSelection(), $matches);",
            "selected_text": "$paymentTransfer->getPaymentSelection()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 45,
            "line_to": 45,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of preg_match cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Service/Payment/Extractor/PaymentMethodKeyExtractor.php",
            "snippet": "        preg_match('/\\[([a-zA-Z0-9_-]+)\\]/', $paymentTransfer->getPaymentSelection(), $matches);",
            "selected_text": "$paymentTransfer->getPaymentSelection()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 25,
            "line_to": 25,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::definePriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "            $calculableObjectTransfer->getTotals(),",
            "selected_text": "$calculableObjectTransfer->getTotals()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 29,
            "line_to": 29,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::applyLimitedAmountPayments cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "            $calculableObjectTransfer->getTotals(),",
            "selected_text": "$calculableObjectTransfer->getTotals()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 34,
            "line_to": 34,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::applyUnlimitedAmountPayments cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "            $calculableObjectTransfer->getTotals(),",
            "selected_text": "$calculableObjectTransfer->getTotals()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 99,
            "line_to": 99,
            "type": "PossiblyNullOperand",
            "message": "Left operand cannot be nullable, got int|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "                $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$priceToPay",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 99,
            "line_to": 99,
            "type": "PossiblyNullOperand",
            "message": "Right operand cannot be nullable, got int|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "                $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$paymentTransfer->getAvailableAmount()",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 116,
            "line_to": 116,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPaymentProvider on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $paymentProvider = $quoteTransfer->getPayment()->getPaymentProvider();",
            "selected_text": "getPaymentProvider",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 118,
            "line_to": 118,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        if ($this->hasPlugin($pluginType, $paymentProvider) && !$this->isAlreadyExecuted($pluginType, $paymentProvider)) {",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 118,
            "line_to": 118,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::isAlreadyExecuted cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        if ($this->hasPlugin($pluginType, $paymentProvider) && !$this->isAlreadyExecuted($pluginType, $paymentProvider)) {",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 119,
            "line_to": 119,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentProvider);",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 139,
            "line_to": 139,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            if (!$this->hasPlugin($pluginType, $paymentTransfer->getPaymentProvider()) || $this->isAlreadyExecuted($pluginType, $paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 139,
            "line_to": 139,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::isAlreadyExecuted cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            if (!$this->hasPlugin($pluginType, $paymentTransfer->getPaymentProvider()) || $this->isAlreadyExecuted($pluginType, $paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 142,
            "line_to": 142,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentTransfer->getPaymentProvider());",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 144,
            "line_to": 144,
            "type": "PossiblyNullArrayOffset",
            "message": "Cannot access value on variable $this->executedProviderPlugins[$pluginType][mixed|null|string] using possibly null offset mixed|null|string",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $this->executedProviderPlugins[$pluginType][$paymentTransfer->getPaymentProvider()] = true;",
            "selected_text": "$this->executedProviderPlugins[$pluginType]",
            "error_level": 3,
            "shortcode": 125
        },
        {
            "severity": "info",
            "line_from": 160,
            "line_to": 160,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getPaymentProvider on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $paymentProvider = $quoteTransfer->getPayment()->getPaymentProvider();",
            "selected_text": "getPaymentProvider",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 162,
            "line_to": 162,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        if ($this->hasPlugin($pluginType, $paymentProvider)) {",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 164,
            "line_to": 164,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentProvider);",
            "selected_text": "$paymentProvider",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 165,
            "line_to": 165,
            "type": "InvalidOperand",
            "message": "Cannot perform a numeric operation with non-numeric types true and bool",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $isPassed &= $this->executePreCheckPluginPayment($quoteTransfer, $checkoutResponseTransfer, $plugin);",
            "selected_text": "$isPassed",
            "error_level": 4,
            "shortcode": 58
        },
        {
            "severity": "info",
            "line_from": 185,
            "line_to": 185,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::hasPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            if (!$this->hasPlugin($pluginType, $paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 190,
            "line_to": 190,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Checkout\\PaymentPluginExecutor::findPlugin cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $plugin = $this->findPlugin($pluginType, $paymentTransfer->getPaymentProvider());",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 191,
            "line_to": 191,
            "type": "PossiblyInvalidOperand",
            "message": "Cannot perform a numeric operation with non-numeric types true and bool",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $isPassed &= $this->executePreCheckPluginPayment($quoteTransfer, $checkoutResponseTransfer, $plugin);",
            "selected_text": "$isPassed",
            "error_level": 3,
            "shortcode": 163
        },
        {
            "severity": "info",
            "line_from": 191,
            "line_to": 191,
            "type": "InvalidOperand",
            "message": "Cannot perform a numeric operation with a non-numeric type bool",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "            $isPassed &= $this->executePreCheckPluginPayment($quoteTransfer, $checkoutResponseTransfer, $plugin);",
            "selected_text": "$this->executePreCheckPluginPayment($quoteTransfer, $checkoutResponseTransfer, $plugin)",
            "error_level": 4,
            "shortcode": 58
        },
        {
            "severity": "info",
            "line_from": 209,
            "line_to": 209,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\CheckoutErrorTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $errorCount = $checkoutResponseTransfer->getErrors()->count();",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 211,
            "line_to": 211,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\CheckoutErrorTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Checkout/PaymentPluginExecutor.php",
            "snippet": "        $isPassed = $errorCount === $checkoutResponseTransfer->getErrors()->count();",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 64,
            "line_to": 64,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentMethodTransfer> variable $paymentMethodTransfers",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentMethodCreator.php",
            "snippet": "            ->setPaymentMethods(new ArrayObject($paymentMethodTransfers->getArrayCopy()));",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\ErrorTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentMethodCreator.php",
            "snippet": "        if ($paymentMethodCollectionRequestTransfer->getIsTransactional() && $paymentMethodCollectionResponseTransfer->getErrors()->count()) {",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 72,
            "line_to": 72,
            "type": "PossiblyInvalidArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Creator\\PaymentMethodCreator::extractEntityIdentifiersFromErrorTransfers expects ArrayObject<int, Generated\\Shared\\Transfer\\ErrorTransfer>, but possibly different type ArrayObject|array<array-key, Generated\\Shared\\Transfer\\ErrorTransfer> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentMethodCreator.php",
            "snippet": "        $entityIdentifiers = $this->extractEntityIdentifiersFromErrorTransfers($paymentMethodCollectionResponseTransfer->getErrors());",
            "selected_text": "$paymentMethodCollectionResponseTransfer->getErrors()",
            "error_level": 3,
            "shortcode": 92
        },
        {
            "severity": "info",
            "line_from": 111,
            "line_to": 111,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentMethodTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentMethodCreator.php",
            "snippet": "            $paymentMethodCollectionResponseTransfer->getPaymentMethods()->offsetSet(",
            "selected_text": "offsetSet",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 138,
            "line_to": 138,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentMethodTransfer> variable $paymentMethodTransfers",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentMethodCreator.php",
            "snippet": "                $paymentMethodTransfers->offsetUnset($key);",
            "selected_text": "offsetUnset",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 74,
            "line_to": 74,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentProviderTransfer> variable $paymentProviderTransfers",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "            ->setPaymentProviders(new ArrayObject($paymentProviderTransfers->getArrayCopy()));",
            "selected_text": "getArrayCopy",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 79,
            "line_to": 79,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\ErrorTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "        if ($paymentProviderCollectionRequestTransfer->getIsTransactional() && $paymentProviderCollectionResponseTransfer->getErrors()->count() > 0) {",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 83,
            "line_to": 83,
            "type": "PossiblyInvalidArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Creator\\PaymentProviderCreator::extractEntityIdentifiersFromErrorTransfers expects ArrayObject<int, Generated\\Shared\\Transfer\\ErrorTransfer>, but possibly different type ArrayObject|array<array-key, Generated\\Shared\\Transfer\\ErrorTransfer> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "        $entityIdentifiers = $this->extractEntityIdentifiersFromErrorTransfers($paymentProviderCollectionResponseTransfer->getErrors());",
            "selected_text": "$paymentProviderCollectionResponseTransfer->getErrors()",
            "error_level": 3,
            "shortcode": 92
        },
        {
            "severity": "info",
            "line_from": 110,
            "line_to": 110,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentMethodTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "            if ($paymentProviderTransfer->getPaymentMethods()->count()) {",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 111,
            "line_to": 111,
            "type": "PossiblyInvalidArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Creator\\PaymentProviderCreator::assertPaymentMethodRequiredFields expects ArrayObject<int, Generated\\Shared\\Transfer\\PaymentMethodTransfer>, but possibly different type ArrayObject|array<array-key, Generated\\Shared\\Transfer\\PaymentMethodTransfer>|mixed provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "                $this->assertPaymentMethodRequiredFields($paymentProviderTransfer->getPaymentMethods());",
            "selected_text": "$paymentProviderTransfer->getPaymentMethods()",
            "error_level": 3,
            "shortcode": 92
        },
        {
            "severity": "info",
            "line_from": 139,
            "line_to": 139,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentProviderTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "            $paymentProviderCollectionResponseTransfer->getPaymentProviders()->offsetSet(",
            "selected_text": "offsetSet",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 166,
            "line_to": 166,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentProviderTransfer> variable $paymentProviderTransfers",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "                $paymentProviderTransfers->offsetUnset($key);",
            "selected_text": "offsetUnset",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 172,
            "line_to": 172,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentProviderTransfer> variable $paymentProviderTransfers",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "            $paymentProviderTransfers->offsetSet($key, $paymentProviderTransfer);",
            "selected_text": "offsetSet",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 196,
            "line_to": 196,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentMethodTransfer> variable $paymentMethodTransfers",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Creator/PaymentProviderCreator.php",
            "snippet": "                $paymentMethodTransfers->offsetUnset($key);",
            "selected_text": "offsetUnset",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 56,
            "line_to": 56,
            "type": "UndefinedInterfaceMethod",
            "message": "Method Spryker\\Shared\\Kernel\\Transfer\\TransferInterface::getOrderItemIds does not exist",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/EventEmitter/PaymentMessageOmsEventEmitter.php",
            "snippet": "            $orderPaymentEventTransfer->getOrderItemIds(),",
            "selected_text": "getOrderItemIds",
            "error_level": 5,
            "shortcode": 181
        },
        {
            "severity": "info",
            "line_from": 184,
            "line_to": 184,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdStores on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        return $paymentMethodTransfer->getIsActive() && in_array($idStore, $storeRelationTransfer->getIdStores());",
            "selected_text": "getIdStores",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 205,
            "line_to": 205,
            "type": "InvalidNullableReturnType",
            "message": "The declared return type 'int' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getIdStoreFromQuote is not nullable, but 'int|null' contains null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "     * @return int",
            "selected_text": "int",
            "error_level": 5,
            "shortcode": 144
        },
        {
            "severity": "info",
            "line_from": 212,
            "line_to": 212,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdStore on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        if ($storeTransfer->getIdStore() === null) {",
            "selected_text": "getIdStore",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 214,
            "line_to": 214,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Dependency\\Facade\\PaymentToStoreFacadeInterface::getStoreByName cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "            $storeTransfer = $this->storeFacade->getStoreByName($storeTransfer->getName());",
            "selected_text": "$storeTransfer->getName()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 217,
            "line_to": 217,
            "type": "NullableReturnStatement",
            "message": "The declared return type 'int' for Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodReader::getIdStoreFromQuote is not nullable, but the function returns 'int|null'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        return $storeTransfer->getIdStore();",
            "selected_text": "$storeTransfer->getIdStore()",
            "error_level": 5,
            "shortcode": 139
        },
        {
            "severity": "info",
            "line_from": 62,
            "line_to": 62,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Business\\Method\\PaymentMethodStoreRelationUpdater::getIdStoresByIdShipmentMethod cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        $currentIdStores = $this->getIdStoresByIdShipmentMethod($storeRelationTransfer->getIdEntity());",
            "selected_text": "$storeRelationTransfer->getIdEntity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 68,
            "line_to": 68,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentEntityManagerInterface::addPaymentMethodStoreRelationsForStores cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        $this->paymentEntityManager->addPaymentMethodStoreRelationsForStores($saveIdStores, $storeRelationTransfer->getIdEntity());",
            "selected_text": "$storeRelationTransfer->getIdEntity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 69,
            "line_to": 69,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentEntityManagerInterface::removePaymentMethodStoreRelationsForStores cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        $this->paymentEntityManager->removePaymentMethodStoreRelationsForStores($deleteIdStores, $storeRelationTransfer->getIdEntity());",
            "selected_text": "$storeRelationTransfer->getIdEntity()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 198,
            "line_to": 198,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setIdEntity on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodUpdater.php",
            "snippet": "            ->setIdEntity($paymentMethodTransfer->getIdPaymentMethod());",
            "selected_text": "setIdEntity",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 81,
            "line_to": 81,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Service\\Payment\\PaymentServiceInterface::getPaymentMethodKey cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "            $paymentMethodsKeys[] = $this->paymentService->getPaymentMethodKey($quoteTransfer->getPayment());",
            "selected_text": "$quoteTransfer->getPayment()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 88,
            "line_to": 88,
            "type": "PossiblyNullReference",
            "message": "Cannot call method setPriceToPay on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "        $orderTransfer->getTotals()->setPriceToPay($this->calculatePriceToPay($orderTransfer));",
            "selected_text": "setPriceToPay",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 100,
            "line_to": 100,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getGrandTotal on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "        $priceToPay = $orderTransfer->getTotals()->getGrandTotal();",
            "selected_text": "getGrandTotal",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 111,
            "line_to": 111,
            "type": "PossiblyNullOperand",
            "message": "Left operand cannot be nullable, got int|mixed|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$priceToPay",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 111,
            "line_to": 111,
            "type": "PossiblyNullOperand",
            "message": "Right operand cannot be nullable, got int|mixed|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            $priceToPay = $priceToPay - $paymentTransfer->getAvailableAmount();",
            "selected_text": "$paymentTransfer->getAvailableAmount()",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 125,
            "line_to": 125,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Dependency\\Plugin\\Sales\\PaymentHydratorPluginCollectionInterface::has cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "        if ($this->paymentHydratePluginCollection->has($paymentTransfer->getPaymentProvider())) {",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 126,
            "line_to": 126,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Dependency\\Plugin\\Sales\\PaymentHydratorPluginCollectionInterface::get cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            $paymentHydratePlugin = $this->paymentHydratePluginCollection->get($paymentTransfer->getPaymentProvider());",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 137,
            "line_to": 137,
            "type": "MoreSpecificReturnType",
            "message": "The declared return type 'Propel\\Runtime\\Collection\\ObjectCollection<Orm\\Zed\\Payment\\Persistence\\SpySalesPayment>' for Spryker\\Zed\\Payment\\Business\\Order\\SalesPaymentHydrator::findSalesPaymentByIdSalesOrder is more specific than the inferred return type 'Propel\\Runtime\\Collection\\Collection&Traversable<mixed, Orm\\Zed\\Payment\\Persistence\\SpySalesPayment>'",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "     * @return \\Propel\\Runtime\\Collection\\ObjectCollection<\\Orm\\Zed\\Payment\\Persistence\\SpySalesPayment>",
            "selected_text": "\\Propel\\Runtime\\Collection\\ObjectCollection<\\Orm\\Zed\\Payment\\Persistence\\SpySalesPayment>",
            "error_level": 3,
            "shortcode": 70
        },
        {
            "severity": "info",
            "line_from": 141,
            "line_to": 143,
            "type": "LessSpecificReturnStatement",
            "message": "The type 'Propel\\Runtime\\Collection\\Collection&Traversable<mixed, Orm\\Zed\\Payment\\Persistence\\SpySalesPayment>' is more general than the declared return type 'Propel\\Runtime\\Collection\\ObjectCollection<Orm\\Zed\\Payment\\Persistence\\SpySalesPayment>' for Spryker\\Zed\\Payment\\Business\\Order\\SalesPaymentHydrator::findSalesPaymentByIdSalesOrder",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "        return $this->paymentQueryContainer\n            ->queryPaymentMethodsByIdSalesOrder($orderTransfer->getIdSalesOrder())\n            ->find();",
            "selected_text": "$this->paymentQueryContainer\n            ->queryPaymentMethodsByIdSalesOrder($orderTransfer->getIdSalesOrder())\n            ->find()",
            "error_level": 3,
            "shortcode": 129
        },
        {
            "severity": "info",
            "line_from": 142,
            "line_to": 142,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodsByIdSalesOrder cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentHydrator.php",
            "snippet": "            ->queryPaymentMethodsByIdSalesOrder($orderTransfer->getIdSalesOrder())",
            "selected_text": "$orderTransfer->getIdSalesOrder()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 39,
            "line_to": 39,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodPriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "            $paymentTransfer->getFkSalesOrder(),",
            "selected_text": "$paymentTransfer->getFkSalesOrder()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 40,
            "line_to": 40,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodPriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "            $paymentTransfer->getPaymentProvider(),",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 41,
            "line_to": 41,
            "type": "PossiblyNullArgument",
            "message": "Argument 3 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodPriceToPay cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "            $paymentTransfer->getPaymentMethod(),",
            "selected_text": "$paymentTransfer->getPaymentMethod()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 44,
            "line_to": 44,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getAmount on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentReader.php",
            "snippet": "        return $salesPaymentEntity->getAmount();",
            "selected_text": "getAmount",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 48,
            "line_to": 48,
            "type": "PossiblyNullReference",
            "message": "Cannot call method requireIdSalesOrder on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "            ->requireIdSalesOrder();",
            "selected_text": "requireIdSalesOrder",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 50,
            "line_to": 50,
            "type": "PossiblyNullReference",
            "message": "Cannot call method getIdSalesOrder on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $idSalesOrder = $checkoutResponse->getSaveOrder()->getIdSalesOrder();",
            "selected_text": "getIdSalesOrder",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 52,
            "line_to": 52,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Business\\Order\\SalesPaymentSaver::executeSavePaymentMethodsTransaction cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "            $this->executeSavePaymentMethodsTransaction($quoteTransfer, $idSalesOrder);",
            "selected_text": "$idSalesOrder",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 104,
            "line_to": 104,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Payment\\Persistence\\SpySalesPayment::setAmount cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "        $salesPaymentEntity->setAmount($paymentTransfer->getAmount());",
            "selected_text": "$paymentTransfer->getAmount()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 133,
            "line_to": 133,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodType cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "                $paymentTransfer->getPaymentProvider(),",
            "selected_text": "$paymentTransfer->getPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 134,
            "line_to": 134,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentQueryContainerInterface::queryPaymentMethodType cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Order/SalesPaymentSaver.php",
            "snippet": "                $paymentTransfer->getPaymentMethod(),",
            "selected_text": "$paymentTransfer->getPaymentMethod()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 95,
            "line_to": 95,
            "type": "MixedClone",
            "message": "Cannot clone mixed",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/PaymentProviderValidator/PaymentProviderPaymentMethodUniqueValidator.php",
            "snippet": "            $paymentMethodTransfers[] = (clone $paymentMethodTransfer)->setPaymentProvider($paymentProviderTransfer);",
            "selected_text": "clone $paymentMethodTransfer",
            "error_level": 1,
            "shortcode": 227
        },
        {
            "severity": "info",
            "line_from": 38,
            "line_to": 38,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\PaymentRepositoryInterface::findPaymentProviderByKey cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Provider/PaymentProviderReader.php",
            "snippet": "            ->findPaymentProviderByKey($paymentProviderTransfer->getPaymentProviderKey());",
            "selected_text": "$paymentProviderTransfer->getPaymentProviderKey()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 46,
            "line_to": 46,
            "type": "PossiblyInvalidMethodCall",
            "message": "Cannot call method on possible array<array-key, Generated\\Shared\\Transfer\\PaymentMethodTransfer> variable ",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Writer/PaymentWriter.php",
            "snippet": "        if ($paymentProviderTransfer->getPaymentMethods()->count() === 0) {",
            "selected_text": "count",
            "error_level": 3,
            "shortcode": 113
        },
        {
            "severity": "info",
            "line_from": 53,
            "line_to": 53,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Generated\\Shared\\Transfer\\PaymentProviderTransfer::addPaymentMethod cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Writer/PaymentWriter.php",
            "snippet": "            $paymentProviderTransfer->addPaymentMethod($paymentMethodResponseTransfer->getPaymentMethod());",
            "selected_text": "$paymentMethodResponseTransfer->getPaymentMethod()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 79,
            "line_to": 79,
            "type": "PossiblyNullArgument",
            "message": "Argument 2 of Spryker\\Zed\\Payment\\Persistence\\PaymentEntityManagerInterface::addPaymentMethodStoreRelationsForStores cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Writer/PaymentWriter.php",
            "snippet": "                $paymentMethodTransfer->getIdPaymentMethod(),",
            "selected_text": "$paymentMethodTransfer->getIdPaymentMethod()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 46,
            "line_to": 46,
            "type": "PossiblyNullOperand",
            "message": "Right operand cannot be nullable, got int|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Command/SendEventPaymentConfirmationPendingPlugin.php",
            "snippet": "            $orderItemsTotal += $orderItem->getPriceToPayAggregation();",
            "selected_text": "$orderItem->getPriceToPayAggregation()",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 47,
            "line_to": 47,
            "type": "PossiblyNullOperand",
            "message": "Right operand cannot be nullable, got int|null",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Command/SendEventPaymentRefundPendingPlugin.php",
            "snippet": "            $orderItemsTotal += $orderItem->getRefundableAmount();",
            "selected_text": "$orderItem->getRefundableAmount()",
            "error_level": 1,
            "shortcode": 80
        },
        {
            "severity": "info",
            "line_from": 107,
            "line_to": 107,
            "type": "ArgumentTypeCoercion",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\Propel\\Mapper\\PaymentProviderMapper::mapPaymentProviderEntityCollectionToPaymentProviderCollectionTransfer expects Propel\\Runtime\\Collection\\ObjectCollection<Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider>, but parent type Propel\\Runtime\\Collection\\Collection&Traversable<mixed, Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "                $paymentProviderEntities,",
            "selected_text": "$paymentProviderEntities",
            "error_level": 3,
            "shortcode": 193
        },
        {
            "severity": "info",
            "line_from": 129,
            "line_to": 129,
            "type": "ArgumentTypeCoercion",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\Propel\\Mapper\\StoreRelationMapper::mapPaymentMethodStoreEntitiesToStoreRelationTransfer expects Propel\\Runtime\\Collection\\ObjectCollection<Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStore>, but parent type Propel\\Runtime\\Collection\\Collection&Traversable<mixed, Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethodStore> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "            ->mapPaymentMethodStoreEntitiesToStoreRelationTransfer($shipmentMethodStoreEntities, $storeRelationTransfer);",
            "selected_text": "$shipmentMethodStoreEntities",
            "error_level": 3,
            "shortcode": 193
        },
        {
            "severity": "info",
            "line_from": 142,
            "line_to": 142,
            "type": "PossiblyNullReference",
            "message": "Cannot call method hasColumn on possibly null value",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "        if ($this->getFactory()->createPaymentMethodQuery()->getTableMap()->hasColumn('is_hidden')) {",
            "selected_text": "hasColumn",
            "error_level": 3,
            "shortcode": 83
        },
        {
            "severity": "info",
            "line_from": 154,
            "line_to": 154,
            "type": "ArgumentTypeCoercion",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\Propel\\Mapper\\PaymentMapper::mapPaymentMethodEntityCollectionToPaymentMethodsTransfer expects Propel\\Runtime\\Collection\\ObjectCollection<Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod>, but parent type Propel\\Runtime\\Collection\\Collection&Traversable<mixed, Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "                $paymentMethodEntities,",
            "selected_text": "$paymentMethodEntities",
            "error_level": 3,
            "shortcode": 193
        },
        {
            "severity": "info",
            "line_from": 208,
            "line_to": 208,
            "type": "ArgumentTypeCoercion",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\Propel\\Mapper\\PaymentProviderMapper::mapPaymentProviderEntityCollectionToPaymentProviderCollectionTransfer expects Propel\\Runtime\\Collection\\ObjectCollection<Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider>, but parent type Propel\\Runtime\\Collection\\Collection&Traversable<mixed, Orm\\Zed\\Payment\\Persistence\\SpyPaymentProvider> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "                $paymentProviderEntities,",
            "selected_text": "$paymentProviderEntities",
            "error_level": 3,
            "shortcode": 193
        },
        {
            "severity": "info",
            "line_from": 236,
            "line_to": 236,
            "type": "ArgumentTypeCoercion",
            "message": "Argument 1 of Spryker\\Zed\\Payment\\Persistence\\Propel\\Mapper\\PaymentMapper::mapPaymentMethodEntityCollectionToPaymentMethodCollectionTransfer expects Propel\\Runtime\\Collection\\ObjectCollection<Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod>, but parent type Propel\\Runtime\\Collection\\Collection&Traversable<mixed, Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod> provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/PaymentRepository.php",
            "snippet": "                $paymentMethodEntities,",
            "selected_text": "$paymentMethodEntities",
            "error_level": 3,
            "shortcode": 193
        },
        {
            "severity": "info",
            "line_from": 108,
            "line_to": 108,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod::setFkPaymentProvider cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentMapper.php",
            "snippet": "            $paymentMethodEntity->setFkPaymentProvider($paymentMethodTransfer->getIdPaymentProvider());",
            "selected_text": "$paymentMethodTransfer->getIdPaymentProvider()",
            "error_level": 3,
            "shortcode": 78
        },
        {
            "severity": "info",
            "line_from": 110,
            "line_to": 110,
            "type": "PossiblyNullArgument",
            "message": "Argument 1 of Orm\\Zed\\Payment\\Persistence\\SpyPaymentMethod::setPaymentMethodKey cannot be null, possibly null value provided",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentMapper.php",
            "snippet": "        $paymentMethodEntity->setPaymentMethodKey($paymentMethodTransfer->getPaymentMethodKey() ?? $paymentMethodTransfer->getMethodName());",
            "selected_text": "$paymentMethodTransfer->getPaymentMethodKey() ?? $paymentMethodTransfer->getMethodName()",
            "error_level": 3,
            "shortcode": 78
        }
    ],
    "deprecation": [
        {
            "severity": "info",
            "line_from": 115,
            "line_to": 115,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPaymentOrFail has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Authorizer/ForeignPaymentAuthorizer.php",
            "snippet": "        $paymentSelectionKey = $this->paymentService->getPaymentSelectionKey($quoteTransfer->getPaymentOrFail());",
            "selected_text": "getPaymentOrFail",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 121,
            "line_to": 121,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPaymentOrFail has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Authorizer/ForeignPaymentAuthorizer.php",
            "snippet": "        $paymentMethodKey = $this->paymentService->getPaymentMethodKey($quoteTransfer->getPaymentOrFail());",
            "selected_text": "getPaymentOrFail",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 133,
            "line_to": 133,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\CheckoutResponseTransfer::getSaveOrderOrFail has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Authorizer/ForeignPaymentAuthorizer.php",
            "snippet": "            $checkoutResponseTransfer->getSaveOrderOrFail(),",
            "selected_text": "getSaveOrderOrFail",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 22,
            "line_to": 22,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\Business\\Calculation\\PaymentCalculator::getPaymentCollection has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Calculation/PaymentCalculator.php",
            "snippet": "        $paymentCollection = $this->getPaymentCollection($calculableObjectTransfer);",
            "selected_text": "getPaymentCollection",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 125,
            "line_to": 125,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\PaymentMethodTransfer::setMethodName has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "                ->setMethodName($methodKey)",
            "selected_text": "setMethodName",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 184,
            "line_to": 184,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\StoreRelationTransfer::getIdStores has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodReader.php",
            "snippet": "        return $paymentMethodTransfer->getIsActive() && in_array($idStore, $storeRelationTransfer->getIdStores());",
            "selected_text": "getIdStores",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 63,
            "line_to": 63,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\StoreRelationTransfer::getIdStores has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        $requestedIdStores = $storeRelationTransfer->getIdStores();",
            "selected_text": "getIdStores",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 81,
            "line_to": 81,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\StoreRelationTransfer::getIdStores has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodStoreRelationUpdater.php",
            "snippet": "        return $storeRelation->getIdStores();",
            "selected_text": "getIdStores",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 80,
            "line_to": 80,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "        if ($quoteTransfer->getPayment()) {",
            "selected_text": "getPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 81,
            "line_to": 81,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\QuoteTransfer::getPayment has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Method/PaymentMethodValidator.php",
            "snippet": "            $paymentMethodsKeys[] = $this->paymentService->getPaymentMethodKey($quoteTransfer->getPayment());",
            "selected_text": "getPayment",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 76,
            "line_to": 76,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\StoreRelationTransfer::getIdStores has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Writer/PaymentWriter.php",
            "snippet": "        if ($storeRelationTransfer && $storeRelationTransfer->getIdStores()) {",
            "selected_text": "getIdStores",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 78,
            "line_to": 78,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\StoreRelationTransfer::getIdStores has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Business/Writer/PaymentWriter.php",
            "snippet": "                $storeRelationTransfer->getIdStores(),",
            "selected_text": "getIdStores",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 20,
            "line_to": 20,
            "type": "DeprecatedInterface",
            "message": "Spryker\\Zed\\Calculation\\Dependency\\Plugin\\CalculationPluginInterface is marked deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Communication/Plugin/Calculation/PaymentCalculatorPlugin.php",
            "snippet": "class PaymentCalculatorPlugin extends AbstractPlugin implements CalculationPluginInterface",
            "selected_text": "PaymentCalculatorPlugin",
            "error_level": 2,
            "shortcode": 152
        },
        {
            "severity": "info",
            "line_from": 164,
            "line_to": 164,
            "type": "DeprecatedConstant",
            "message": "Constant Generated\\Shared\\Transfer\\QuoteTransfer::PAYMENT is deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/PaymentConfig.php",
            "snippet": "            QuoteTransfer::PAYMENT => [",
            "selected_text": "QuoteTransfer::PAYMENT",
            "error_level": 2,
            "shortcode": 170
        },
        {
            "severity": "info",
            "line_from": 117,
            "line_to": 117,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\PaymentDependencyProvider::addCheckoutPlugins has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/PaymentDependencyProvider.php",
            "snippet": "        $container = $this->addCheckoutPlugins($container);",
            "selected_text": "addCheckoutPlugins",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 118,
            "line_to": 118,
            "type": "DeprecatedMethod",
            "message": "The method Spryker\\Zed\\Payment\\PaymentDependencyProvider::addPaymentHydrationPlugins has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/PaymentDependencyProvider.php",
            "snippet": "        $container = $this->addPaymentHydrationPlugins($container);",
            "selected_text": "addPaymentHydrationPlugins",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 74,
            "line_to": 74,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\PaymentMethodTransfer::setMethodName has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentMapper.php",
            "snippet": "        $paymentMethodTransfer->setMethodName($paymentMethodEntity->getPaymentMethodKey());",
            "selected_text": "setMethodName",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 110,
            "line_to": 110,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\PaymentMethodTransfer::getMethodName has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentMapper.php",
            "snippet": "        $paymentMethodEntity->setPaymentMethodKey($paymentMethodTransfer->getPaymentMethodKey() ?? $paymentMethodTransfer->getMethodName());",
            "selected_text": "getMethodName",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 84,
            "line_to": 84,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\PaymentMethodTransfer::setMethodName has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/PaymentProviderMapper.php",
            "snippet": "                ->setMethodName($paymentMethodEntity->getPaymentMethodKey());",
            "selected_text": "setMethodName",
            "error_level": 2,
            "shortcode": 1
        },
        {
            "severity": "info",
            "line_from": 29,
            "line_to": 29,
            "type": "DeprecatedMethod",
            "message": "The method Generated\\Shared\\Transfer\\StoreRelationTransfer::addIdStores has been marked as deprecated",
            "file_name": "vendor/spryker/spryker/Bundles/Payment/src/Spryker/Zed/Payment/Persistence/Propel/Mapper/StoreRelationMapper.php",
            "snippet": "            $storeRelationTransfer->addIdStores($paymentMethodStoreEntity->getFkStore());",
            "selected_text": "addIdStores",
            "error_level": 2,
            "shortcode": 1
        }
    ],
    "count": 124
}
